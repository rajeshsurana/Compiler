{"name":"Compiler-cse340","tagline":"A basic compiler which creates intermediate code from source code","body":"# Welcome to the Compiler wiki!\r\n\r\nThis compiler is a result of course CSE340 project. It is completely error free and robust! Let's start checking it now! This is the compiler for Java like language and does not detect some of the Java constructs like \"for\". But, it almost covers all the constructs. In the [Parser Requirement](https://github.com/rajeshsurana/Compiler-CSE340/blob/master/assignment%2002.pdf) document you can check out the supported constructs.\r\n\r\nGUI of this compiler is divided into 4 sections-\r\n## 1.Lexer\r\nRequirement and specifications can be found [here.](https://github.com/rajeshsurana/Compiler/blob/master/assignment%2001.pdf) \r\nHere is the snapshot of Lexer-![Lexer](https://raw.githubusercontent.com/rajeshsurana/Compiler-CSE340/master/Images/Lexer.jpg)\r\n## 2.Parser\r\nRequirement and specifications can be found [here.](https://github.com/rajeshsurana/Compiler/blob/master/assignment%2002.pdf) \r\nSnapshot of Parser-![Parser](https://raw.githubusercontent.com/rajeshsurana/Compiler-CSE340/master/Images/Parser.jpg)\r\n## 3.Semantic Analyzer\r\nRequirement and specifications can be found [here.](https://github.com/rajeshsurana/Compiler/blob/master/assignment%2003.pdf)\r\nSnapshot of Semantic Analyzer-![Semantic Analyzer](https://raw.githubusercontent.com/rajeshsurana/Compiler-CSE340/master/Images/SemanticAnalyzer.jpg)\r\n## 4.Code Generator\r\nRequirement and specifications can be found [here.](https://github.com/rajeshsurana/Compiler/blob/master/assignment%2004.pdf)\r\nSnapshot of Code Generator-![Code Generator](https://raw.githubusercontent.com/rajeshsurana/Compiler-CSE340/master/Images/CodeGenerator.jpg)\r\n\r\n***\r\nNote:All problem statements are provided by the course instructor (Prof. Gonzalez-Sanchez, Javier).\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}